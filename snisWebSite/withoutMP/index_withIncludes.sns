<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<% sns.include('/metaDeclerations.sns'); %>
<body>
<div class="body_container">
	<!-- header -->
	<div>
		<% sns.include('/header.html');  %>
		<div class="main_title">
			<label>Simple Network Information Server</label>
		</div>
	</div>
	
	<!-- content -->
	<div class="content">
		<div class="main_data info_container rounded_top rounded_bottom">
			<div class="info">
				<p class="hp-text">
					<div>
                        <p>Matlab SNIS is a simple self hosting HTTP server.</p>
                        <p>This free implementation is usefull for simple applications (It's by no means as robust as actual servers like Apache and IIS)</p>
                        <p>The server utilizes TCP/IP server sockets when the instrument control toolkit is available and falls back to undocumented JavaServerSocket otherwise.</p>
					</div>
					
					<div>
                        <h4>Http Handlers</h4>
                        <p>Http requests are handled by objects which implement the abstract class HttpHandler (inspired by ASP.Net architecture, no ISAPIs here)</p>
                        <p>Supported:</p>
                        <ul>
                            <li>Text files (html, css, js, json, xml, txt)</li>
                            <li>Images (png, jpg, gif, ico, bmp)</li>
                            <li>Execute web service methods</li>
                            <li>List web service methods</li>
                            <li>Simple network script pages (sns, similar to classic ASP but with benefits)</li>
                        </ul>
                        <p>HttpHandlers list is currently hardcoded in HttpServer ctor, but can be easily injected from outside or loaded from <a href="https://www.mathworks.com/matlabcentral/fileexchange/67966-mxml">MXML</a> files.</p>
					</div>
					
					<div>
                        <h4>Session State</h4>
                        <p>Session state is maintained by AppSession class.</p>
                        <p>Session id is (traditionally) saved as a cookie ("sid").</p>
                        <p>Known issues:</p>
                        <ul>
                            <li>when the session id cookie in the browser out lives the matlab session or when App is reset (not the HttpServer)
                                a session expired exception is thrown on the first request</li>
                        </ul>
					</div>
					<div>
                        <h4>Web Services</h4>
                        <p>SNIS exposes AppControllers as webservices via the WebServiceHttpHandler.</p>
					</div>
					
					<div>
                        <h4>Simple Network Script Pages (SNS)</h4>
                        <p>For those of you that have been here long enough, SNS resembles classic ASP.</p>
                        <p>Pages are written as plain html, and matlab code is embeded inside the page to manipulate it in the server side within &lt;% %&gt; tags.</p>
                        <p>SNS pages are parsed by the SnsHttpHandler and transformed into a matlab function saved in an .m file.</p>
                        <p>The function has one input parameter: sns - instance of the SnScript class.</p>
                        <p>Use the sns object to access the request, response & session objects as well as to include other resources (html, sns files) within the page.</p>
                        <p>SNS pages are only parsed if the matching SNS.m file doesn't exist or if it's outdated.</p>
                        <p>Known Issues:</p>
                        <ul>
                            <li>When updating an sns file, the SnsHttpHandler will parse it the next time its accessed, but matlab may not immediately parse the file if the server is running</li>
                            <li> ** Workaround: turn off the HttpServer, delete the sns.m file and restart your HttpServer</li>
                            <li>The transpose operator ' is not supported within sns files, because it messes up the regex which locates script blocks</li>
                            <li> ** Workaround: use sns.transpose(x); or your own function with a shorter name ^_^ </li>
                        </ul>
					</div>
					
					<div>
					<h4>Acknowledgements</h4>
					<p>Some of the code was taken from <a href="https://www.mathworks.com/matlabcentral/fileexchange/29027-web-server">Dirk-Jan Kroons original webserver library (2010)</a></p>
					<ul>
						<li>Some of the request parsing code</li>
						<li>The JavaTcpServer function was taken as a whole to manage JavaServerSockets</li>
						<li>perhaps some other bits of code here and there</li>
					</ul>
					</div>
					
					<div>
					<h4>Example:</h4>
					<div class="code">
					<p>server = HttpServer();</p>
					
					<p><span class="comment">// or</span></p>
					
					<p>config = HttpServerConfig([name, value, ...]);</p>
					<p>server = HttpServer(config);</p>
					<hr>
					<p>server.start();</p>
					<p>server.listen();</p>
					<p>server.stop();</p>
					</div>
					</div>
				</p>
			</div>
		</div>
	</div>
	
	<!-- Footer -->
	<% sns.include('/footer.html');  %>
</div>
</body>
</html>
